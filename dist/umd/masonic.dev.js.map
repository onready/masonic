{"version":3,"file":"masonic.dev.js","sources":["../../node_modules/@react-hook/latest/src/index.tsx","../../node_modules/@react-hook/debounce/src/index.tsx","../../node_modules/@react-hook/passive-layout-effect/src/index.tsx","../../node_modules/@react-hook/event/src/index.tsx","../../node_modules/@react-hook/window-size/src/index.tsx","../../node_modules/@react-hook/throttle/src/index.tsx","../../node_modules/@react-hook/window-scroll/src/index.tsx","../../node_modules/@essentials/raf/src/index.ts","../../node_modules/@essentials/request-timeout/src/index.ts","../../src/use-scroller.ts","../../node_modules/trie-memoize/src/index.ts","../../node_modules/@essentials/one-key-map/src/index.ts","../../node_modules/@essentials/memoize-one/src/index.ts","../../src/elements-cache.ts","../../src/use-force-update.ts","../../src/use-masonry.tsx","../../src/masonry-scroller.tsx","../../src/use-container-position.ts","../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../../src/use-resize-observer.ts","../../src/interval-tree.ts","../../src/use-positioner.ts","../../src/use-scroll-to-index.ts","../../src/masonry.tsx","../../src/list.tsx","../../src/use-infinite-loader.ts"],"sourcesContent":["import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n","import * as React from 'react'\nimport useLatest from '@react-hook/latest'\n\nexport const useDebounceCallback = <CallbackArgs extends any[]>(\n  callback: (...args: CallbackArgs) => void,\n  wait = 100,\n  leading = false\n): ((...args: CallbackArgs) => void) => {\n  const storedCallback = useLatest(callback)\n  const timeout = React.useRef<ReturnType<typeof setTimeout>>()\n  const deps = [wait, leading, storedCallback]\n  // Cleans up pending timeouts when the deps change\n  React.useEffect(\n    () => () => {\n      timeout.current && clearTimeout(timeout.current)\n      timeout.current = void 0\n    },\n    deps\n  )\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments\n    const {current} = timeout\n    // Calls on leading edge\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(() => {\n        timeout.current = void 0\n      }, wait)\n      // eslint-disable-next-line prefer-spread\n      return storedCallback.current.apply(null, args as any)\n    }\n    // Clear the timeout every call and start waiting again\n    current && clearTimeout(current)\n    // Waits for `wait` before invoking the callback\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0\n      storedCallback.current.apply(null, args as any)\n    }, wait)\n  }, deps)\n}\n\nexport const useDebounce = <State extends any>(\n  initialState: State | (() => State),\n  wait?: number,\n  leading?: boolean\n): [State, React.Dispatch<React.SetStateAction<State>>] => {\n  const state = React.useState(initialState)\n  return [state[0], useDebounceCallback(state[1], wait, leading)]\n}\n","import * as React from 'react'\n\nconst usePassiveLayoutEffect =\n  React[\n    typeof document !== 'undefined' && document.createElement !== void 0\n      ? 'useLayoutEffect'\n      : 'useEffect'\n  ]\n\nexport default usePassiveLayoutEffect\n","import * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\nfunction useEvent<\n  T extends Window = Window,\n  K extends keyof WindowEventMap = keyof WindowEventMap\n>(\n  target: Window | null,\n  type: K,\n  listener: WindowEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends Document = Document,\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n>(\n  target: Document | null,\n  type: K,\n  listener: DocumentEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends HTMLElement = HTMLElement,\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n>(\n  target: React.RefObject<T> | T | null,\n  type: K,\n  listener: ElementEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent(target: any, type: any, listener: any, cleanup: any): void {\n  const storedListener = useLatest(listener)\n  const storedCleanup = useLatest(cleanup)\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return\n\n    let didUnsubscribe = 0\n    function listener(this: any, ...args: any[]) {\n      if (didUnsubscribe) return\n      storedListener.current.apply(this, args)\n    }\n\n    targetEl.addEventListener(type, listener)\n    const cleanup = storedCleanup.current\n\n    return () => {\n      didUnsubscribe = 1\n      targetEl.removeEventListener(type, listener)\n      cleanup && cleanup()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type])\n}\n\nexport type ElementEventListener<\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n> = (this: HTMLElement, ev: HTMLElementEventMap[K]) => any\n\nexport type DocumentEventListener<\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n> = (this: Document, ev: DocumentEventMap[K]) => any\n\nexport type WindowEventListener<\n  K extends keyof WindowEventMap = keyof WindowEventMap\n> = (this: Document, ev: WindowEventMap[K]) => any\n\nexport default useEvent\n","import {useDebounce} from '@react-hook/debounce'\nimport useEvent from '@react-hook/event'\n\nconst emptyObj = {}\n\nexport interface DebouncedWindowSizeOptions {\n  initialWidth?: number\n  initialHeight?: number\n  wait?: number\n  leading?: boolean\n}\n\nconst win = typeof window === 'undefined' ? null : window\nconst getSize = () =>\n  [\n    document.documentElement.clientWidth,\n    document.documentElement.clientHeight,\n  ] as const\n\nexport const useWindowSize = (\n  options: DebouncedWindowSizeOptions = emptyObj\n): readonly [number, number] => {\n  const {wait, leading, initialWidth = 0, initialHeight = 0} = options\n  const [size, setDebouncedSize] = useDebounce<readonly [number, number]>(\n    /* istanbul ignore next */\n    typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize,\n    wait,\n    leading\n  )\n  const setSize = (): void => setDebouncedSize(getSize)\n\n  useEvent(win, 'resize', setSize)\n  useEvent(win, 'orientationchange', setSize)\n\n  return size\n}\n\nexport const useWindowHeight = (\n  options?: Omit<DebouncedWindowSizeOptions, 'initialWidth'>\n): number => useWindowSize(options)[1]\n\nexport const useWindowWidth = (\n  options?: Omit<DebouncedWindowSizeOptions, 'initialHeight'>\n): number => useWindowSize(options)[0]\n","import * as React from 'react'\nimport useLatest from '@react-hook/latest'\n\nconst perf = typeof performance !== 'undefined' ? performance : Date\nconst now = () => perf.now()\n\nexport function useThrottleCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  fps = 30,\n  leading = false\n): (...args: CallbackArguments) => void {\n  const storedCallback = useLatest(callback)\n  const ms = 1000 / fps\n  const prev = React.useRef(0)\n  const trailingTimeout = React.useRef<ReturnType<typeof setTimeout>>()\n  const clearTrailing = () =>\n    trailingTimeout.current && clearTimeout(trailingTimeout.current)\n  const deps = [fps, leading, storedCallback]\n\n  // Reset any time the deps change\n  React.useEffect(\n    () => () => {\n      prev.current = 0\n      clearTrailing()\n    },\n    deps\n  )\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments\n    const rightNow = now()\n    const call = () => {\n      prev.current = rightNow\n      clearTrailing()\n      storedCallback.current.apply(null, args as any)\n    }\n    const current = prev.current\n    // leading\n    if (leading && current === 0) return call()\n    // body\n    if (rightNow - current > ms) {\n      if (current > 0) return call()\n      prev.current = rightNow\n    }\n    // trailing\n    clearTrailing()\n    trailingTimeout.current = setTimeout(() => {\n      call()\n      prev.current = 0\n    }, ms)\n  }, deps)\n}\n\nexport function useThrottle<State>(\n  initialState: State | (() => State),\n  fps?: number,\n  leading?: boolean\n): [State, React.Dispatch<React.SetStateAction<State>>] {\n  const state = React.useState<State>(initialState)\n  return [state[0], useThrottleCallback(state[1], fps, leading)]\n}\n","import {useThrottle} from '@react-hook/throttle'\nimport useEvent from '@react-hook/event'\n\nconst win = typeof window === 'undefined' ? null : window\nconst getScrollY = (): number =>\n  (win as Window).scrollY !== void 0\n    ? (win as Window).scrollY\n    : (win as Window).pageYOffset === void 0\n    ? 0\n    : (win as Window).pageYOffset\n\nexport const useWindowScroll = (fps = 30): number => {\n  const state = useThrottle(\n    typeof window === 'undefined' ? 0 : getScrollY,\n    fps,\n    true\n  )\n  useEvent(win, 'scroll', (): void => state[1](getScrollY()))\n  return state[0]\n}\n\nexport default useWindowScroll\n","export type Raf = (callback: (timestamp: number) => void) => number\nexport type Caf = (handle: number) => void\n\nlet u = 'undefined',\n  win = typeof window !== u ? window : ({} as any),\n  p = typeof performance !== u ? performance : Date,\n  now = () => p.now(),\n  af = 'AnimationFrame' as const,\n  Caf = 'cancel' + af,\n  Raf = 'request' + af,\n  raf: Raf = win[Raf] && win[Raf].bind(win),\n  caf: Caf = win[Caf] && win[Caf].bind(win)\n\nif (!raf || !caf) {\n  let lastTime = 0\n  raf = (callback: FrameRequestCallback) => {\n    let curr = now(),\n      next = Math.max(lastTime + 1000 / 60, curr)\n    return setTimeout(() => {\n      callback((lastTime = next))\n    }, next - curr) as any\n  }\n  caf = (h) => clearTimeout(h)\n}\n\nexport {raf, caf, now}\n","/**\n * Copyright 2011, Joe Lambert.\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n **/\nimport {raf, caf, now} from '@essentials/raf'\n\nexport interface RequestTimeoutHandle {\n  v?: number\n}\n\nexport const clearRequestTimeout = (handle: RequestTimeoutHandle): void => {\n  caf(handle.v || -1)\n}\n\nexport const requestTimeout = (\n  fn: (...args: any[]) => void,\n  ms: number\n): RequestTimeoutHandle => {\n  const start = now(),\n    handle: RequestTimeoutHandle = {}\n\n  const loop = () => {\n    now() - start >= ms ? fn.call(null) : (handle.v = raf(loop))\n  }\n\n  handle.v = raf(loop)\n  return handle\n}\n\nexport default requestTimeout\n","import * as React from 'react'\r\nimport useScrollPosition from '@react-hook/window-scroll'\r\nimport {requestTimeout, clearRequestTimeout} from '@essentials/request-timeout'\r\n\r\n/**\r\n * A hook for tracking whether the `window` is currently being scrolled and it's scroll position on\r\n * the y-axis. These values are used for determining which grid cells to render and when\r\n * to add styles to the masonry container that maximize scroll performance.\r\n *\r\n * @param offset The vertical space in pixels between the top of the grid container and the top\r\n *  of the browser `document.documentElement`.\r\n * @param fps This determines how often (in frames per second) to update the scroll position of the\r\n *  browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\r\n *  The default value of `12` has been very reasonable in my own testing, but if you have particularly\r\n *  heavy `render` components it may be prudent to reduce this number.\r\n */\r\nexport function useScroller(\r\n  offset = 0,\r\n  fps = 12\r\n): {scrollTop: number; isScrolling: boolean} {\r\n  const scrollTop = useScrollPosition(fps)\r\n  const [isScrolling, setIsScrolling] = React.useState(false)\r\n  const didMount = React.useRef(0)\r\n\r\n  React.useEffect(() => {\r\n    if (didMount.current === 1) setIsScrolling(true)\r\n    const to = requestTimeout(() => {\r\n      // This is here to prevent premature bail outs while maintaining high resolution\r\n      // unsets. Without it there will always bee a lot of unnecessary DOM writes to style.\r\n      setIsScrolling(false)\r\n    }, 40 + 1000 / fps)\r\n    didMount.current = 1\r\n    return () => clearRequestTimeout(to)\r\n  }, [fps, scrollTop])\r\n\r\n  return {scrollTop: Math.max(0, scrollTop - offset), isScrolling}\r\n}\r\n","export interface MapLike {\n  new (...args: any[]): any\n}\n\nexport type CacheConstructor =\n  | MapConstructor\n  | WeakMapConstructor\n  | MapLike\n  | Record<any, any>\n\ninterface Cache<K = any, V = any> {\n  set: (k: K, v: V) => V\n  get: (k: K) => V\n}\n\nconst createCache = (obj: CacheConstructor): Cache => {\n  try {\n    // @ts-ignore\n    return new obj()\n  } catch (e) {\n    const cache: Record<string, any> = {}\n\n    return {\n      set(k, v): void {\n        cache[k] = v\n      },\n      get(k): any {\n        return cache[k]\n      },\n    }\n  }\n}\n\nconst memo = (\n  constructors: CacheConstructor[]\n): {s: Cache['set']; g: Cache['get']} => {\n  const depth = constructors.length,\n    baseCache = createCache(constructors[0])\n  let base: any\n  let map: any\n  let i: number\n  let node: typeof baseCache\n  const one = depth === 1\n  // quicker access for one and two-argument functions\n  const g1 = (args: IArguments): any =>\n    (base = baseCache.get(args[0])) === void 0 || one ? base : base.get(args[1])\n  const s1 = (args: IArguments, value: any): any => {\n    if (one) baseCache.set(args[0], value)\n    else {\n      if ((base = baseCache.get(args[0])) === void 0) {\n        map = createCache(constructors[1])\n        map.set(args[1], value)\n        baseCache.set(args[0], map)\n      } else {\n        base.set(args[1], value)\n      }\n    }\n\n    return value\n  }\n\n  const g2 = (args: IArguments): any => {\n    node = baseCache\n\n    for (i = 0; i < depth; i++)\n      if ((node = node.get(args[i])) === void 0) return\n\n    return node\n  }\n\n  const s2 = (args: IArguments, value: any): any => {\n    node = baseCache\n\n    for (i = 0; i < depth - 1; i++) {\n      if ((map = node.get(args[i])) === void 0) {\n        map = createCache(constructors[i + 1])\n        node.set(args[i], map)\n        node = map\n      } else {\n        node = map\n      }\n    }\n\n    node.set(args[depth - 1], value)\n    return value\n  }\n\n  return depth < 3 ? {g: g1, s: s1} : {g: g2, s: s2}\n}\n\nconst memoize = <T extends any[], U extends any>(\n  mapConstructors: CacheConstructor[],\n  fn: (...args: T) => U\n): ((...args: T) => U) => {\n  let item: U\n  const {g, s} = memo(mapConstructors)\n  return function () {\n    return (item = g(arguments)) === void 0\n      ? s(arguments, fn.apply(null, arguments as any))\n      : item\n  }\n}\n\nexport default memoize\n","class OneKeyMap<K extends any = any, V extends any = any> {\n  set: (k: K, v: V) => void\n  get: (k: K) => V | undefined\n\n  constructor() {\n    let key: K | undefined, val: V | undefined\n    this.get = (k: K): V | undefined => (k === key ? val : void 0)\n    this.set = (k: K, v: V): void => {\n      key = k\n      val = v\n    }\n  }\n}\n\nexport default OneKeyMap\n","const memoOne = <Args extends any[], T extends any>(\n  fn: (...args: Args) => T,\n  areEqual?: AreEqual<Args>\n): OutputFunction<Args, T> => {\n  const equal = areEqual || defaultAreEqual\n  let args: Args, value: any\n\n  return function (): T {\n    return !!args && equal(arguments as any, args)\n      ? value\n      : (value = fn.apply(null, (args = arguments as any)))\n  } as OutputFunction<Args, T>\n}\n\nexport default memoOne\n\nconst defaultAreEqual = (\n  current: IArguments,\n  prev: IArguments | any[]\n): boolean =>\n  current[0] === prev[0] &&\n  current[1] === prev[1] &&\n  current[2] === prev[2] &&\n  current[3] === prev[3]\n\nexport type AreEqual<Args> = (currentArgs: Args, prevArgs: Args) => boolean\nexport type InputFunction = (...args: any[]) => any\nexport type OutputFunction<Args extends any[], T extends any> = (\n  ...args: Args\n) => T\n","export const elementsCache: WeakMap<Element, number> = new Map()\r\n","import * as React from 'react'\r\n\r\nexport function useForceUpdate() {\r\n  const setState = React.useState(emptyObj)[1]\r\n  return React.useRef(() => setState({})).current\r\n}\r\n\r\nconst emptyObj = {}\r\n","import * as React from 'react'\r\nimport trieMemoize from 'trie-memoize'\r\nimport OneKeyMap from '@essentials/one-key-map'\r\nimport memoizeOne from '@essentials/memoize-one'\r\nimport useLatest from '@react-hook/latest'\r\nimport {elementsCache} from './elements-cache'\r\nimport {useForceUpdate} from './use-force-update'\r\nimport type {Positioner} from './use-positioner'\r\n\r\n/**\r\n * This hook handles the render phases of the masonry layout and returns the grid as a React element.\r\n *\r\n * @param options Options for configuring the masonry layout renderer. See `UseMasonryOptions`.\r\n */\r\nexport function useMasonry<Item>({\r\n  // Measurement and layout\r\n  positioner,\r\n  resizeObserver,\r\n  // Grid items\r\n  items,\r\n  // Container props\r\n  as: ContainerComponent = 'div',\r\n  id,\r\n  className,\r\n  style,\r\n  role = 'grid',\r\n  tabIndex = 0,\r\n  containerRef,\r\n  // Item props\r\n  itemAs: ItemComponent = 'div',\r\n  itemStyle,\r\n  itemHeightEstimate = 300,\r\n  itemKey = defaultGetItemKey,\r\n  // Rendering props\r\n  overscanBy = 2,\r\n  scrollTop,\r\n  isScrolling,\r\n  height,\r\n  render: RenderComponent,\r\n  onRender,\r\n}: UseMasonryOptions<Item>) {\r\n  let startIndex = 0\r\n  let stopIndex: number | undefined = void 0\r\n  const forceUpdate = useForceUpdate()\r\n  const setItemRef = getRefSetter(positioner, resizeObserver)\r\n  const itemCount = items.length\r\n  const {\r\n    columnWidth,\r\n    columnCount,\r\n    range,\r\n    estimateHeight,\r\n    size,\r\n    shortestColumn,\r\n  } = positioner\r\n  const measuredCount = size()\r\n  const shortestColumnSize = shortestColumn()\r\n  const children: React.ReactElement[] = []\r\n  const itemRole = role + 'item'\r\n  const storedOnRender = useLatest(onRender)\r\n\r\n  overscanBy = height * overscanBy\r\n  const rangeEnd = scrollTop + overscanBy\r\n  const needsFreshBatch =\r\n    shortestColumnSize < rangeEnd && measuredCount < itemCount\r\n\r\n  range(\r\n    // We overscan in both directions because users scroll both ways,\r\n    // though one must admit scrolling down is more common and thus\r\n    // we only overscan by half the downward overscan amount\r\n    Math.max(0, scrollTop - overscanBy / 2),\r\n    rangeEnd,\r\n    (index, left, top) => {\r\n      const data = items[index]\r\n      const key = itemKey(data, index)\r\n      const phaseTwoStyle: React.CSSProperties = {\r\n        top,\r\n        left,\r\n        width: columnWidth,\r\n        writingMode: 'horizontal-tb',\r\n        position: 'absolute',\r\n      }\r\n\r\n      /* istanbul ignore next */\r\n      if (\r\n        typeof process !== 'undefined' &&\r\n        process.env.NODE_ENV !== 'production'\r\n      ) {\r\n        throwWithoutData(data, index)\r\n      }\r\n\r\n      children.push(\r\n        <ItemComponent\r\n          key={key}\r\n          ref={setItemRef(index)}\r\n          role={itemRole}\r\n          style={\r\n            typeof itemStyle === 'object' && itemStyle !== null\r\n              ? Object.assign({}, phaseTwoStyle, itemStyle)\r\n              : phaseTwoStyle\r\n          }\r\n        >\r\n          {createRenderElement(RenderComponent, index, data, columnWidth)}\r\n        </ItemComponent>\r\n      )\r\n\r\n      if (stopIndex === void 0) {\r\n        startIndex = index\r\n        stopIndex = index\r\n      } else {\r\n        startIndex = Math.min(startIndex, index)\r\n        stopIndex = Math.max(stopIndex, index)\r\n      }\r\n    }\r\n  )\r\n\r\n  if (needsFreshBatch) {\r\n    const batchSize = Math.min(\r\n      itemCount - measuredCount,\r\n      Math.ceil(\r\n        ((scrollTop + overscanBy - shortestColumnSize) / itemHeightEstimate) *\r\n          columnCount\r\n      )\r\n    )\r\n\r\n    let index = measuredCount\r\n    const phaseOneStyle = getCachedSize(columnWidth)\r\n\r\n    for (; index < measuredCount + batchSize; index++) {\r\n      const data = items[index]\r\n      const key = itemKey(data, index)\r\n\r\n      /* istanbul ignore next */\r\n      if (\r\n        typeof process !== 'undefined' &&\r\n        process.env.NODE_ENV !== 'production'\r\n      ) {\r\n        throwWithoutData(data, index)\r\n      }\r\n\r\n      children.push(\r\n        <ItemComponent\r\n          key={key}\r\n          ref={setItemRef(index)}\r\n          role={itemRole}\r\n          style={\r\n            typeof itemStyle === 'object'\r\n              ? Object.assign({}, phaseOneStyle, itemStyle)\r\n              : phaseOneStyle\r\n          }\r\n        >\r\n          {createRenderElement(RenderComponent, index, data, columnWidth)}\r\n        </ItemComponent>\r\n      )\r\n    }\r\n  }\r\n\r\n  // Calls the onRender callback if the rendered indices changed\r\n  React.useEffect(() => {\r\n    if (typeof storedOnRender.current === 'function' && stopIndex !== void 0)\r\n      storedOnRender.current(startIndex, stopIndex, items)\r\n\r\n    didEverMount = '1'\r\n  }, [startIndex, stopIndex, items, storedOnRender])\r\n  // If we needed a fresh batch we should reload our components with the measured\r\n  // sizes\r\n  React.useEffect(() => {\r\n    if (needsFreshBatch) forceUpdate()\r\n    // eslint-disable-next-line\r\n  }, [needsFreshBatch])\r\n\r\n  // gets the container style object based upon the estimated height and whether or not\r\n  // the page is being scrolled\r\n  const containerStyle = getContainerStyle(\r\n    isScrolling,\r\n    estimateHeight(itemCount, itemHeightEstimate)\r\n  )\r\n\r\n  return (\r\n    <ContainerComponent\r\n      ref={containerRef}\r\n      key={didEverMount}\r\n      id={id}\r\n      role={role}\r\n      className={className}\r\n      tabIndex={tabIndex}\r\n      style={\r\n        typeof style === 'object'\r\n          ? assignUserStyle(containerStyle, style)\r\n          : containerStyle\r\n      }\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction throwWithoutData(data: any, index: number) {\r\n  if (!data) {\r\n    throw new Error(\r\n      `No data was found at index: ${index}\\n\\n` +\r\n        `This usually happens when you've mutated or changed the \"items\" array in a ` +\r\n        `way that makes it shorter than the previous \"items\" array. Masonic knows nothing ` +\r\n        `about your underlying data and when it caches cell positions, it assumes you aren't ` +\r\n        `mutating the underlying \"items\".\\n\\n` +\r\n        `See https://codesandbox.io/s/masonic-w-react-router-example-2b5f9?file=/src/index.js for ` +\r\n        `an example that gets around this limitations. For advanced implementations, see ` +\r\n        `https://codesandbox.io/s/masonic-w-react-router-and-advanced-config-example-8em42?file=/src/index.js\\n\\n` +\r\n        `If this was the result of your removing an item from your \"items\", see this issue: ` +\r\n        `https://github.com/jaredLunde/masonic/issues/12`\r\n    )\r\n  }\r\n}\r\n\r\n// This is for triggering a remount after SSR has loaded in the client w/ hydrate()\r\nlet didEverMount = '0'\r\n\r\nexport interface UseMasonryOptions<Item> {\r\n  /**\r\n   * An array containing the data used by the grid items.\r\n   */\r\n  items: Item[]\r\n  /**\r\n   * A grid cell positioner and cache created by the `usePositioner()` hook or\r\n   * the `createPositioner` utility.\r\n   */\r\n  positioner: Positioner\r\n  /**\r\n   * A resize observer that tracks mutations to the grid cells and forces the\r\n   * Masonry grid to recalculate its layout if any cells affect column heights\r\n   * change. Check out the `useResizeObserver()` hook.\r\n   */\r\n  resizeObserver?: {\r\n    observe: ResizeObserver['observe']\r\n    disconnect: ResizeObserver['observe']\r\n    unobserve: ResizeObserver['unobserve']\r\n  }\r\n  /**\r\n   * This is the type of element the grid container will be rendered as.\r\n   * @default \"div\"`\r\n   */\r\n  as?: keyof JSX.IntrinsicElements | React.ComponentType<any>\r\n  /**\r\n   * Optionally gives the grid container an `id` prop.\r\n   */\r\n  id?: string\r\n  /**\r\n   * Optionally gives the grid container a `className` prop.\r\n   */\r\n  className?: string\r\n  /**\r\n   * Adds extra `style` attributes to the container in addition to those\r\n   * created by the `useMasonry()` hook.\r\n   */\r\n  style?: React.CSSProperties\r\n  /**\r\n   * Optionally swap out the accessibility `role` prop of the container and its items.\r\n   * @default \"grid\"\r\n   */\r\n  role?: 'grid' | 'list'\r\n  /**\r\n   * Change the `tabIndex` of the grid container.\r\n   * @default 0\r\n   */\r\n  tabIndex?: number\r\n  /**\r\n   * Forwards a React ref to the grid container.\r\n   */\r\n  containerRef?:\r\n    | ((element: HTMLElement) => void)\r\n    | React.MutableRefObject<HTMLElement | null>\r\n  /**\r\n   * This is the type of element the grid items will be rendered as.\r\n   * @default \"div\"\r\n   */\r\n  itemAs?: keyof JSX.IntrinsicElements | React.ComponentType<any>\r\n  /**\r\n   * Adds extra `style` attributes to the grid items in addition to those\r\n   * created by the `useMasonry()` hook.\r\n   */\r\n  itemStyle?: React.CSSProperties\r\n  /**\r\n   * This value is used for estimating the initial height of the masonry grid. It is important for\r\n   * the UX of the scrolling behavior and in determining how many `items` to render in a batch, so it's\r\n   * wise to set this value with some level accuracy, though it doesn't need to be perfect.\r\n   * @default 300\r\n   */\r\n  itemHeightEstimate?: number\r\n  /**\r\n   * The value returned here must be unique to the item. By default, the key is the item's index. This is ok\r\n   * if your collection of items is never modified. Setting this property ensures that the component in `render`\r\n   * is reused each time the masonry grid is reflowed. A common pattern would be to return the item's database\r\n   * ID here if there is one, e.g. `data => data.id`\r\n   * @default (data, index) => index`\r\n   */\r\n  itemKey?: (data: Item, index: number) => string | number\r\n  /**\r\n   * This number is used for determining the number of grid cells outside of the visible window to render.\r\n   * The default value is `2` which means \"render 2 windows worth (2 * `height`) of content before and after\r\n   * the items in the visible window\". A value of `3` would be 3 windows worth of grid cells, so it's a\r\n   * linear relationship.\r\n   *\r\n   * Overscanning is important for preventing tearing when scrolling through items in the grid, but setting\r\n   * too high of a vaimport { useForceUpdate } from './use-force-update';\r\nlue may create too much work for React to handle, so it's best that you tune this\r\n   * value accordingly.\r\n   * @default 2\r\n   */\r\n  overscanBy?: number\r\n\r\n  /**\r\n   * This is the height of the window. If you're rendering the grid relative to the browser `window`,\r\n   * the current `document.documentElement.clientHeight` is the value you'll want to set here. If you're\r\n   * rendering the grid inside of another HTML element, you'll want to provide the current `element.offsetHeight`\r\n   * here.\r\n   */\r\n  height: number\r\n  /**\r\n   * The current scroll progress in pixel of the window the grid is rendered in. If you're rendering\r\n   * the grid relative to the browser `window`, you'll want the most current `window.scrollY` here.\r\n   * If you're rendering the grid inside of another HTML element, you'll want the current `element.scrollTop`\r\n   * value here. The `useScroller()` hook and `<MasonryScroller>` components will help you if you're\r\n   * rendering the grid relative to the browser `window`.\r\n   */\r\n  scrollTop: number\r\n  /**\r\n   * This property is used for determining whether or not the grid container should add styles that\r\n   * dramatically increase scroll performance. That is, turning off `pointer-events` and adding a\r\n   * `will-change: contents;` value to the style string. You can forgo using this prop, but I would\r\n   * not recommend that. The `useScroller()` hook and `<MasonryScroller>` components will help you if\r\n   * you're rendering the grid relative to the browser `window`.\r\n   * @default false\r\n   */\r\n  isScrolling?: boolean\r\n  /**\r\n   * This component is rendered for each item of your `items` prop array. It should accept three props:\r\n   * `index`, `width`, and `data`. See RenderComponentProps.\r\n   */\r\n  render: React.ComponentType<RenderComponentProps<Item>>\r\n  /**\r\n   * This callback is invoked any time the items currently being rendered by the grid change.\r\n   */\r\n  onRender?: (\r\n    startIndex: number,\r\n    stopIndex: number | undefined,\r\n    items: Item[]\r\n  ) => void\r\n}\r\n\r\nexport interface RenderComponentProps<Item> {\r\n  /**\r\n   * The index of the cell in the `items` prop array.\r\n   */\r\n  index: number\r\n  /**\r\n   * The rendered width of the cell's column.\r\n   */\r\n  width: number\r\n  /**\r\n   * The data at `items[index]` of your `items` prop array.\r\n   */\r\n  data: Item\r\n}\r\n\r\n//\r\n// Render-phase utilities\r\n\r\n// ~5.5x faster than createElement without the memo\r\nconst createRenderElement = trieMemoize(\r\n  [OneKeyMap, {}, WeakMap, OneKeyMap],\r\n  (RenderComponent, index, data, columnWidth) => (\r\n    <RenderComponent index={index} data={data} width={columnWidth} />\r\n  )\r\n)\r\n\r\nconst getContainerStyle = memoizeOne(\r\n  (isScrolling: boolean | undefined, estimateHeight: number) => ({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    height: Math.ceil(estimateHeight),\r\n    maxHeight: Math.ceil(estimateHeight),\r\n    willChange: isScrolling ? 'contents' : void 0,\r\n    pointerEvents: isScrolling ? 'none' : void 0,\r\n  })\r\n)\r\n\r\nconst cmp2 = (args: IArguments, pargs: IArguments | any[]): boolean =>\r\n  args[0] === pargs[0] && args[1] === pargs[1]\r\n\r\nconst assignUserStyle = memoizeOne(\r\n  (containerStyle, userStyle) => Object.assign({}, containerStyle, userStyle),\r\n  // @ts-ignore\r\n  cmp2\r\n)\r\n\r\nfunction defaultGetItemKey<Item>(_: Item, i: number) {\r\n  return i\r\n}\r\n\r\n// the below memoizations for for ensuring shallow equal is reliable for pure\r\n// component children\r\nconst getCachedSize = memoizeOne(\r\n  (width: number): React.CSSProperties => ({\r\n    width,\r\n    zIndex: -1000,\r\n    visibility: 'hidden',\r\n    position: 'absolute',\r\n    writingMode: 'horizontal-tb',\r\n  }),\r\n  (args, pargs) => args[0] === pargs[0]\r\n)\r\n\r\nconst getRefSetter = memoizeOne(\r\n  (\r\n    positioner: Positioner,\r\n    resizeObserver?: UseMasonryOptions<any>['resizeObserver']\r\n  ) => (index: number) => (el: HTMLElement | null): void => {\r\n    if (el === null) return\r\n    if (resizeObserver) {\r\n      resizeObserver.observe(el)\r\n      elementsCache.set(el, index)\r\n    }\r\n    if (positioner.get(index) === void 0) positioner.set(index, el.offsetHeight)\r\n  },\r\n  // @ts-ignore\r\n  cmp2\r\n)\r\n","import {useScroller} from './use-scroller'\r\nimport {useMasonry} from './use-masonry'\r\nimport type {UseMasonryOptions} from './use-masonry'\r\n/**\r\n * A heavily-optimized component that updates `useMasonry()` when the scroll position of the browser `window`\r\n * changes. This bare-metal component is used by `<Masonry>` under the hood.\r\n */\r\nexport function MasonryScroller<Item>(props: MasonryScrollerProps<Item>) {\r\n  // We put this in its own layer because it's the thing that will trigger the most updates\r\n  // and we don't want to slower ourselves by cycling through all the functions, objects, and effects\r\n  // of other hooks\r\n  const {scrollTop, isScrolling} = useScroller(props.offset, props.scrollFps)\r\n  // This is an update-heavy phase and while we could just Object.assign here,\r\n  // it is way faster to inline and there's a relatively low hit to he bundle\r\n  // size.\r\n  return useMasonry<Item>({\r\n    scrollTop,\r\n    isScrolling,\r\n    positioner: props.positioner,\r\n    resizeObserver: props.resizeObserver,\r\n    items: props.items,\r\n    onRender: props.onRender,\r\n    as: props.as,\r\n    id: props.id,\r\n    className: props.className,\r\n    style: props.style,\r\n    role: props.role,\r\n    tabIndex: props.tabIndex,\r\n    containerRef: props.containerRef,\r\n    itemAs: props.itemAs,\r\n    itemStyle: props.itemStyle,\r\n    itemHeightEstimate: props.itemHeightEstimate,\r\n    itemKey: props.itemKey,\r\n    overscanBy: props.overscanBy,\r\n    height: props.height,\r\n    render: props.render,\r\n  })\r\n}\r\n\r\nexport interface MasonryScrollerProps<Item>\r\n  extends Omit<UseMasonryOptions<Item>, 'scrollTop' | 'isScrolling'> {\r\n  /**\r\n   * This determines how often (in frames per second) to update the scroll position of the\r\n   * browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\r\n   * The default value of `12` has been very reasonable in my own testing, but if you have particularly\r\n   * heavy `render` components it may be prudent to reduce this number.\r\n   * @default 12\r\n   */\r\n  scrollFps?: number\r\n  /**\r\n   * The vertical space in pixels between the top of the grid container and the top\r\n   * of the browser `document.documentElement`.\r\n   * @default 0\r\n   */\r\n  offset?: number\r\n}\r\n\r\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\r\n  MasonryScroller.displayName = 'MasonryScroller'\r\n}\r\n","import * as React from 'react'\r\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\r\n\r\n/**\r\n * A hook for measuring the width of the grid container, as well as its distance\r\n * from the top of the document. These values are necessary to correctly calculate the number/width\r\n * of columns to render, as well as the number of rows to render.\r\n *\r\n * @param elementRef A `ref` object created by `React.useRef()`. That ref should be provided to the\r\n *   `containerRef` property in `useMasonry()`.\r\n * @param deps You can force this hook to recalculate the `offset` and `width` whenever this\r\n *   dependencies list changes. A common dependencies list might look like `[windowWidth, windowHeight]`,\r\n *   which would force the hook to recalculate any time the size of the browser `window` changed.\r\n */\r\nexport function useContainerPosition(\r\n  elementRef: React.MutableRefObject<HTMLElement | null>,\r\n  deps: React.DependencyList = emptyArr\r\n): ContainerPosition {\r\n  const [containerPosition, setContainerPosition] = React.useState<\r\n    ContainerPosition\r\n  >({offset: 0, width: 0})\r\n\r\n  useLayoutEffect(() => {\r\n    const {current} = elementRef\r\n    if (current !== null) {\r\n      let offset = 0\r\n      let el = current\r\n\r\n      do {\r\n        offset += el.offsetTop || 0\r\n        el = el.offsetParent as HTMLElement\r\n      } while (el)\r\n\r\n      if (\r\n        offset !== containerPosition.offset ||\r\n        current.offsetWidth !== containerPosition.width\r\n      ) {\r\n        setContainerPosition({\r\n          offset,\r\n          width: current.offsetWidth,\r\n        })\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps)\r\n\r\n  return containerPosition\r\n}\r\n\r\nexport interface ContainerPosition {\r\n  /**\r\n   * The distance in pixels between the top of the element in `elementRef` and the top of\r\n   * the `document.documentElement`.\r\n   */\r\n  offset: number\r\n  /**\r\n   * The `offsetWidth` of the element in `elementRef`.\r\n   */\r\n  width: number\r\n}\r\n\r\nconst emptyArr: [] = []\r\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import * as React from 'react'\r\nimport trieMemoize from 'trie-memoize'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\nimport {elementsCache} from './elements-cache'\r\nimport {useForceUpdate} from './use-force-update'\r\nimport type {Positioner} from './use-positioner'\r\n\r\n/**\r\n * Creates a resize observer that forces updates to the grid cell positions when mutations are\r\n * made to cells affecting their height.\r\n *\r\n * @param positioner The masonry cell positioner created by the `usePositioner()` hook.\r\n */\r\nexport function useResizeObserver(positioner: Positioner) {\r\n  const forceUpdate = useForceUpdate()\r\n  const resizeObserver = createResizeObserver(positioner, forceUpdate)\r\n  // Cleans up the resize observers when they change or the\r\n  // component unmounts\r\n  React.useEffect(() => () => resizeObserver.disconnect(), [resizeObserver])\r\n  return resizeObserver\r\n}\r\n\r\n/**\r\n * Creates a resize observer that fires an `updater` callback whenever the height of\r\n * one or many cells change. The `useResizeObserver()` hook is using this under the hood.\r\n *\r\n * @param positioner A cell positioner created by the `usePositioner()` hook or the `createPositioner()` utility\r\n * @param updater A callback that fires whenever one or many cell heights change.\r\n */\r\nexport const createResizeObserver = trieMemoize(\r\n  [WeakMap],\r\n  // TODO: figure out a way to test this\r\n  /* istanbul ignore next */\r\n  (positioner: Positioner, updater: (updates: number[]) => void) =>\r\n    new ResizeObserver((entries) => {\r\n      const updates: number[] = []\r\n      let i = 0\r\n\r\n      for (; i < entries.length; i++) {\r\n        const entry = entries[i]\r\n        const height = (entry.target as HTMLElement).offsetHeight\r\n\r\n        if (height > 0) {\r\n          const index = elementsCache.get(entry.target)\r\n\r\n          if (index !== void 0) {\r\n            const position = positioner.get(index)\r\n\r\n            if (position !== void 0 && height !== position.height)\r\n              updates.push(index, height)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (updates.length > 0) {\r\n        // Updates the size/positions of the cell with the resize\r\n        // observer updates\r\n        positioner.update(updates)\r\n        updater(updates)\r\n      }\r\n    })\r\n)\r\n\r\ninterface ResizeObserverEntryBoxSize {\r\n  blockSize: number\r\n  inlineSize: number\r\n}\r\n\r\ninterface NativeResizeObserverEntry extends ResizeObserverEntry {\r\n  borderBoxSize: ResizeObserverEntryBoxSize\r\n  contentBoxSize: ResizeObserverEntryBoxSize\r\n}\r\n","type Color = 0 | 1 | 2\r\nconst RED = 0\r\nconst BLACK = 1\r\nconst NIL = 2\r\n\r\nconst DELETE = 0\r\nconst KEEP = 1\r\n\r\ntype ListNode = {\r\n  index: number\r\n  high: number\r\n  next: ListNode | null\r\n}\r\n\r\ninterface TreeNode {\r\n  max: number\r\n  low: number\r\n  high: number\r\n  // color\r\n  C: Color\r\n  // P\r\n  P: TreeNode\r\n  // right\r\n  R: TreeNode\r\n  // left\r\n  L: TreeNode\r\n  list: ListNode\r\n}\r\n\r\ninterface Tree {\r\n  root: TreeNode\r\n  size: number\r\n}\r\n\r\nfunction addInterval(treeNode: TreeNode, high: number, index: number): boolean {\r\n  let node: ListNode | null = treeNode.list\r\n  let prevNode: ListNode | undefined\r\n\r\n  while (node) {\r\n    if (node.index === index) return false\r\n    if (high > node.high) break\r\n    prevNode = node\r\n    node = node.next\r\n  }\r\n\r\n  if (!prevNode) treeNode.list = {index, high, next: node}\r\n  if (prevNode) prevNode.next = {index, high, next: prevNode.next}\r\n\r\n  return true\r\n}\r\n\r\nfunction removeInterval(treeNode: TreeNode, index: number) {\r\n  let node: ListNode | null = treeNode.list\r\n  if (node.index === index) {\r\n    if (node.next === null) return DELETE\r\n    treeNode.list = node.next\r\n    return KEEP\r\n  }\r\n\r\n  let prevNode: ListNode | undefined = node\r\n  node = node.next\r\n\r\n  while (node !== null) {\r\n    if (node.index === index) {\r\n      prevNode.next = node.next\r\n      return KEEP\r\n    }\r\n    prevNode = node\r\n    node = node.next\r\n  }\r\n}\r\n\r\nconst NULL_NODE: TreeNode = {\r\n  low: 0,\r\n  max: 0,\r\n  high: 0,\r\n  C: NIL,\r\n  // @ts-ignore\r\n  P: undefined,\r\n  // @ts-ignore\r\n  R: undefined,\r\n  // @ts-ignore\r\n  L: undefined,\r\n  // @ts-ignore\r\n  list: undefined,\r\n}\r\n\r\nNULL_NODE.P = NULL_NODE\r\nNULL_NODE.L = NULL_NODE\r\nNULL_NODE.R = NULL_NODE\r\n\r\nfunction updateMax(node: TreeNode) {\r\n  const max = node.high\r\n  if (node.L === NULL_NODE && node.R === NULL_NODE) node.max = max\r\n  else if (node.L === NULL_NODE) node.max = Math.max(node.R.max, max)\r\n  else if (node.R === NULL_NODE) node.max = Math.max(node.L.max, max)\r\n  else node.max = Math.max(Math.max(node.L.max, node.R.max), max)\r\n}\r\n\r\nfunction updateMaxUp(node: TreeNode) {\r\n  let x = node\r\n\r\n  while (x.P !== NULL_NODE) {\r\n    updateMax(x.P)\r\n    x = x.P\r\n  }\r\n}\r\n\r\nfunction rotateLeft(tree: Tree, x: TreeNode) {\r\n  if (x.R === NULL_NODE) return\r\n  const y = x.R\r\n  x.R = y.L\r\n  if (y.L !== NULL_NODE) y.L.P = x\r\n  y.P = x.P\r\n\r\n  if (x.P === NULL_NODE) tree.root = y\r\n  else {\r\n    if (x === x.P.L) x.P.L = y\r\n    else x.P.R = y\r\n  }\r\n\r\n  y.L = x\r\n  x.P = y\r\n\r\n  updateMax(x)\r\n  updateMax(y)\r\n}\r\n\r\nfunction rotateRight(tree: Tree, x: TreeNode) {\r\n  if (x.L === NULL_NODE) return\r\n  const y = x.L\r\n  x.L = y.R\r\n  if (y.R !== NULL_NODE) y.R.P = x\r\n  y.P = x.P\r\n\r\n  if (x.P === NULL_NODE) tree.root = y\r\n  else {\r\n    if (x === x.P.R) x.P.R = y\r\n    else x.P.L = y\r\n  }\r\n\r\n  y.R = x\r\n  x.P = y\r\n\r\n  updateMax(x)\r\n  updateMax(y)\r\n}\r\n\r\nfunction replaceNode(tree: Tree, x: TreeNode, y: TreeNode) {\r\n  if (x.P === NULL_NODE) tree.root = y\r\n  else if (x === x.P.L) x.P.L = y\r\n  else x.P.R = y\r\n  y.P = x.P\r\n}\r\n\r\nfunction fixRemove(tree: Tree, x: TreeNode) {\r\n  let w\r\n\r\n  while (x !== NULL_NODE && x.C === BLACK) {\r\n    if (x === x.P.L) {\r\n      w = x.P.R\r\n\r\n      if (w.C === RED) {\r\n        w.C = BLACK\r\n        x.P.C = RED\r\n        rotateLeft(tree, x.P)\r\n        w = x.P.R\r\n      }\r\n\r\n      if (w.L.C === BLACK && w.R.C === BLACK) {\r\n        w.C = RED\r\n        x = x.P\r\n      } else {\r\n        if (w.R.C === BLACK) {\r\n          w.L.C = BLACK\r\n          w.C = RED\r\n          rotateRight(tree, w)\r\n          w = x.P.R\r\n        }\r\n\r\n        w.C = x.P.C\r\n        x.P.C = BLACK\r\n        w.R.C = BLACK\r\n        rotateLeft(tree, x.P)\r\n        x = tree.root\r\n      }\r\n    } else {\r\n      w = x.P.L\r\n\r\n      if (w.C === RED) {\r\n        w.C = BLACK\r\n        x.P.C = RED\r\n        rotateRight(tree, x.P)\r\n        w = x.P.L\r\n      }\r\n\r\n      if (w.R.C === BLACK && w.L.C === BLACK) {\r\n        w.C = RED\r\n        x = x.P\r\n      } else {\r\n        if (w.L.C === BLACK) {\r\n          w.R.C = BLACK\r\n          w.C = RED\r\n          rotateLeft(tree, w)\r\n          w = x.P.L\r\n        }\r\n\r\n        w.C = x.P.C\r\n        x.P.C = BLACK\r\n        w.L.C = BLACK\r\n        rotateRight(tree, x.P)\r\n        x = tree.root\r\n      }\r\n    }\r\n  }\r\n\r\n  x.C = BLACK\r\n}\r\n\r\nfunction minimumTree(x: TreeNode) {\r\n  while (x.L !== NULL_NODE) x = x.L\r\n  return x\r\n}\r\n\r\nfunction fixInsert(tree: Tree, z: TreeNode) {\r\n  let y: TreeNode\r\n  while (z.P.C === RED) {\r\n    if (z.P === z.P.P.L) {\r\n      y = z.P.P.R\r\n\r\n      if (y.C === RED) {\r\n        z.P.C = BLACK\r\n        y.C = BLACK\r\n        z.P.P.C = RED\r\n        z = z.P.P\r\n      } else {\r\n        if (z === z.P.R) {\r\n          z = z.P\r\n          rotateLeft(tree, z)\r\n        }\r\n\r\n        z.P.C = BLACK\r\n        z.P.P.C = RED\r\n        rotateRight(tree, z.P.P)\r\n      }\r\n    } else {\r\n      y = z.P.P.L\r\n\r\n      if (y.C === RED) {\r\n        z.P.C = BLACK\r\n        y.C = BLACK\r\n        z.P.P.C = RED\r\n        z = z.P.P\r\n      } else {\r\n        if (z === z.P.L) {\r\n          z = z.P\r\n          rotateRight(tree, z)\r\n        }\r\n\r\n        z.P.C = BLACK\r\n        z.P.P.C = RED\r\n        rotateLeft(tree, z.P.P)\r\n      }\r\n    }\r\n  }\r\n  tree.root.C = BLACK\r\n}\r\n\r\ninterface IIntervalTree {\r\n  insert(low: number, high: number, index: number): void\r\n  remove(index: number): void\r\n  search(\r\n    low: number,\r\n    high: number,\r\n    callback: (index: number, low: number) => any\r\n  ): void\r\n  size: number\r\n}\r\n\r\nexport function createIntervalTree(): IIntervalTree {\r\n  const tree = {\r\n    root: NULL_NODE,\r\n    size: 0,\r\n  }\r\n  // we know these indexes are a consistent, safe way to make look ups\r\n  // for our case so it's a solid O(1) alternative to\r\n  // the O(log n) searchNode() in typical interval trees\r\n  const indexMap: Record<number, TreeNode> = {}\r\n\r\n  return {\r\n    insert(low, high, index) {\r\n      let x: TreeNode = tree.root\r\n      let y: TreeNode = NULL_NODE\r\n\r\n      while (x !== NULL_NODE) {\r\n        y = x\r\n        if (low === y.low) break\r\n        if (low < x.low) x = x.L\r\n        else x = x.R\r\n      }\r\n\r\n      if (low === y.low && y !== NULL_NODE) {\r\n        if (!addInterval(y, high, index)) return\r\n        y.high = Math.max(y.high, high)\r\n        updateMax(y)\r\n        updateMaxUp(y)\r\n        indexMap[index] = y\r\n        tree.size++\r\n        return\r\n      }\r\n\r\n      const z: TreeNode = {\r\n        low,\r\n        high,\r\n        max: high,\r\n        C: RED,\r\n        P: y,\r\n        L: NULL_NODE,\r\n        R: NULL_NODE,\r\n        list: {index, high, next: null},\r\n      }\r\n\r\n      if (y === NULL_NODE) {\r\n        tree.root = z\r\n      } else {\r\n        if (z.low < y.low) y.L = z\r\n        else y.R = z\r\n        updateMaxUp(z)\r\n      }\r\n\r\n      fixInsert(tree, z)\r\n      indexMap[index] = z\r\n      tree.size++\r\n    },\r\n\r\n    remove(index) {\r\n      const z = indexMap[index]\r\n      if (z === void 0) return\r\n      delete indexMap[index]\r\n\r\n      const intervalResult = removeInterval(z, index)\r\n      if (intervalResult === void 0) return\r\n      if (intervalResult === KEEP) {\r\n        z.high = z.list.high\r\n        updateMax(z)\r\n        updateMaxUp(z)\r\n        tree.size--\r\n        return\r\n      }\r\n\r\n      let y = z\r\n      let originalYColor = y.C\r\n      let x: TreeNode\r\n\r\n      if (z.L === NULL_NODE) {\r\n        x = z.R\r\n        replaceNode(tree, z, z.R)\r\n      } else if (z.R === NULL_NODE) {\r\n        x = z.L\r\n        replaceNode(tree, z, z.L)\r\n      } else {\r\n        y = minimumTree(z.R)\r\n        originalYColor = y.C\r\n        x = y.R\r\n\r\n        if (y.P === z) {\r\n          x.P = y\r\n        } else {\r\n          replaceNode(tree, y, y.R)\r\n          y.R = z.R\r\n          y.R.P = y\r\n        }\r\n\r\n        replaceNode(tree, z, y)\r\n        y.L = z.L\r\n        y.L.P = y\r\n        y.C = z.C\r\n      }\r\n\r\n      updateMax(x)\r\n      updateMaxUp(x)\r\n\r\n      if (originalYColor === BLACK) fixRemove(tree, x)\r\n      tree.size--\r\n    },\r\n\r\n    search(low, high, callback) {\r\n      const stack = [tree.root]\r\n      while (stack.length !== 0) {\r\n        const node = stack.pop() as TreeNode\r\n        if (node === NULL_NODE || low > node.max) continue\r\n        if (node.L !== NULL_NODE) stack.push(node.L)\r\n        if (node.R !== NULL_NODE) stack.push(node.R)\r\n        if (node.low <= high && node.high >= low) {\r\n          let curr: ListNode | null = node.list\r\n          while (curr !== null) {\r\n            if (curr.high >= low) callback(curr.index, node.low)\r\n            curr = curr.next\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    get size() {\r\n      return tree.size\r\n    },\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\r\nimport {createIntervalTree} from './interval-tree'\r\n\r\n/**\r\n * This hook creates the grid cell positioner and cache required by `useMasonry()`. This is\r\n * the meat of the grid's layout algorithm, determining which cells to render at a given scroll\r\n * position, as well as where to place new items in the grid.\r\n *\r\n * @param options Properties that determine the number of columns in the grid, as well\r\n *  as their widths.\r\n * @param deps This hook will create a new positioner, clearing all existing cached positions,\r\n *  whenever the dependencies in this list change.\r\n */\r\nexport function usePositioner(\r\n  {\r\n    width,\r\n    columnWidth = 200,\r\n    columnGutter = 0,\r\n    columnCount,\r\n  }: UsePositionerOptions,\r\n  deps: React.DependencyList = emptyArr\r\n): Positioner {\r\n  const initPositioner = (): Positioner => {\r\n    const [computedColumnWidth, computedColumnCount] = getColumns(\r\n      width,\r\n      columnWidth,\r\n      columnGutter,\r\n      columnCount\r\n    )\r\n    return createPositioner(\r\n      computedColumnCount,\r\n      computedColumnWidth,\r\n      columnGutter\r\n    )\r\n  }\r\n  const [positioner, setPositioner] = React.useState<Positioner>(initPositioner)\r\n  const didMount = React.useRef(0)\r\n\r\n  // Create a new positioner when the dependencies change\r\n  useLayoutEffect(() => {\r\n    if (didMount.current) setPositioner(initPositioner())\r\n    didMount.current = 1\r\n    // eslint-disable-next-line\r\n  }, deps)\r\n\r\n  // Updates the item positions any time a prop potentially affecting their\r\n  // size changes\r\n  useLayoutEffect(() => {\r\n    if (didMount.current) {\r\n      const cacheSize = positioner.size()\r\n      const nextPositioner = initPositioner()\r\n      let index = 0\r\n\r\n      for (; index < cacheSize; index++) {\r\n        const pos = positioner.get(index)\r\n        nextPositioner.set(index, pos !== void 0 ? pos.height : 0)\r\n      }\r\n\r\n      setPositioner(nextPositioner)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [width, columnWidth, columnGutter, columnCount])\r\n\r\n  return positioner\r\n}\r\n\r\nexport interface UsePositionerOptions {\r\n  /**\r\n   * The width of the container you're rendering the grid within, i.e. the container\r\n   * element's `element.offsetWidth`\r\n   */\r\n  width: number\r\n  /**\r\n   * The minimum column width. The `usePositioner()` hook will automatically size the\r\n   * columns to fill their container based upon the `columnWidth` and `columnGutter` values.\r\n   * It will never render anything smaller than this width unless its container itself is\r\n   * smaller than its value. This property is optional if you're using a static `columnCount`.\r\n   * @default 200\r\n   */\r\n  columnWidth?: number\r\n  /**\r\n   * This sets the vertical and horizontal space between grid cells in pixels.\r\n   */\r\n  columnGutter?: number\r\n  /**\r\n   * By default, `usePositioner()` derives the column count from the `columnWidth`, `columnGutter`,\r\n   * and `width` props. However, in some situations it is nice to be able to override that behavior\r\n   * (e.g. creating a `List` component).\r\n   */\r\n  columnCount?: number\r\n}\r\n\r\n/**\r\n * Creates a cell positioner for the `useMasonry()` hook. The `usePositioner()` hook uses\r\n * this utility under the hood.\r\n *\r\n * @param columnCount The number of columns in the grid\r\n * @param columnWidth The width of each column in the grid\r\n * @param columnGutter The amount of horizontal and vertical space in pixels to render\r\n *  between each grid item.\r\n */\r\nexport const createPositioner = (\r\n  columnCount: number,\r\n  columnWidth: number,\r\n  columnGutter = 0\r\n): Positioner => {\r\n  // O(log(n)) lookup of cells to render for a given viewport size\r\n  // Store tops and bottoms of each cell for fast intersection lookup.\r\n  const intervalTree = createIntervalTree()\r\n  // Track the height of each column.\r\n  // Layout algorithm below always inserts into the shortest column.\r\n  const columnHeights: number[] = new Array(columnCount)\r\n  // Used for O(1) item access\r\n  const items: PositionerItem[] = []\r\n  // Tracks the item indexes within an individual column\r\n  const columnItems: number[][] = new Array(columnCount)\r\n\r\n  for (let i = 0; i < columnCount; i++) {\r\n    columnHeights[i] = 0\r\n    columnItems[i] = []\r\n  }\r\n\r\n  return {\r\n    columnCount,\r\n    columnWidth,\r\n    set: (index, height = 0) => {\r\n      let column = 0\r\n\r\n      // finds the shortest column and uses it\r\n      for (let i = 1; i < columnHeights.length; i++) {\r\n        if (columnHeights[i] < columnHeights[column]) column = i\r\n      }\r\n\r\n      const top = columnHeights[column] || 0\r\n      columnHeights[column] = top + height + columnGutter\r\n      columnItems[column].push(index)\r\n      items[index] = {\r\n        left: column * (columnWidth + columnGutter),\r\n        top,\r\n        height,\r\n        column,\r\n      }\r\n      intervalTree.insert(top, top + height, index)\r\n    },\r\n    get: (index) => items[index],\r\n    // This only updates items in the specific columns that have changed, on and after the\r\n    // specific items that have changed\r\n    update: (updates) => {\r\n      const columns: number[] = new Array(columnCount)\r\n      let i = 0,\r\n        j = 0\r\n\r\n      // determines which columns have items that changed, as well as the minimum index\r\n      // changed in that column, as all items after that index will have their positions\r\n      // affected by the change\r\n      for (; i < updates.length - 1; i++) {\r\n        const index = updates[i]\r\n        const item = items[index]\r\n        item.height = updates[++i]\r\n        intervalTree.remove(index)\r\n        intervalTree.insert(item.top, item.top + item.height, index)\r\n        columns[item.column] =\r\n          columns[item.column] === void 0\r\n            ? index\r\n            : Math.min(index, columns[item.column])\r\n      }\r\n\r\n      for (i = 0; i < columns.length; i++) {\r\n        // bails out if the column didn't change\r\n        if (columns[i] === void 0) continue\r\n        const itemsInColumn = columnItems[i]\r\n        // the index order is sorted with certainty so binary search is a great solution\r\n        // here as opposed to Array.indexOf()\r\n        const startIndex = binarySearch(itemsInColumn, columns[i])\r\n        const index = columnItems[i][startIndex]\r\n        const startItem = items[index]\r\n        columnHeights[i] = startItem.top + startItem.height + columnGutter\r\n\r\n        for (j = startIndex + 1; j < itemsInColumn.length; j++) {\r\n          const index = itemsInColumn[j]\r\n          const item = items[index]\r\n          item.top = columnHeights[i]\r\n          columnHeights[i] = item.top + item.height + columnGutter\r\n          intervalTree.remove(index)\r\n          intervalTree.insert(item.top, item.top + item.height, index)\r\n        }\r\n      }\r\n    },\r\n    // Render all cells visible within the viewport range defined.\r\n    range: (lo, hi, renderCallback) =>\r\n      intervalTree.search(lo, hi, (index, top) =>\r\n        renderCallback(index, items[index].left, top)\r\n      ),\r\n    estimateHeight: (itemCount, defaultItemHeight): number => {\r\n      const tallestColumn = Math.max(0, Math.max.apply(null, columnHeights))\r\n\r\n      return itemCount === intervalTree.size\r\n        ? tallestColumn\r\n        : tallestColumn +\r\n            Math.ceil((itemCount - intervalTree.size) / columnCount) *\r\n              defaultItemHeight\r\n    },\r\n    shortestColumn: () => {\r\n      if (columnHeights.length > 1) return Math.min.apply(null, columnHeights)\r\n      return columnHeights[0] || 0\r\n    },\r\n    size(): number {\r\n      return intervalTree.size\r\n    },\r\n  }\r\n}\r\n\r\nexport interface Positioner {\r\n  /**\r\n   * The number of columns in the grid\r\n   */\r\n  columnCount: number\r\n  /**\r\n   * The width of each column in the grid\r\n   */\r\n  columnWidth: number\r\n  /**\r\n   * Sets the position for the cell at `index` based upon the cell's height\r\n   */\r\n  set: (index: number, height: number) => void\r\n  /**\r\n   * Gets the `PositionerItem` for the cell at `index`\r\n   */\r\n  get: (index: number) => PositionerItem | undefined\r\n  /**\r\n   * Updates cells based on their indexes and heights\r\n   * positioner.update([index, height, index, height, index, height...])\r\n   */\r\n  update: (updates: number[]) => void\r\n  /**\r\n   * Searches the interval tree for grid cells with a `top` value in\r\n   * betwen `lo` and `hi` and invokes the callback for each item that\r\n   * is discovered\r\n   */\r\n  range: (\r\n    lo: number,\r\n    hi: number,\r\n    renderCallback: (index: number, left: number, top: number) => void\r\n  ) => void\r\n  /**\r\n   * Returns the number of grid cells in the cache\r\n   */\r\n\r\n  size: () => number\r\n  /**\r\n   * Estimates the total height of the grid\r\n   */\r\n\r\n  estimateHeight: (itemCount: number, defaultItemHeight: number) => number\r\n  /**\r\n   * Returns the height of the shortest column in the grid\r\n   */\r\n\r\n  shortestColumn: () => number\r\n}\r\n\r\nexport interface PositionerItem {\r\n  /**\r\n   * This is how far from the top edge of the grid container in pixels the\r\n   * item is placed\r\n   */\r\n  top: number\r\n  /**\r\n   * This is how far from the left edge of the grid container in pixels the\r\n   * item is placed\r\n   */\r\n  left: number\r\n  /**\r\n   * This is the height of the grid cell\r\n   */\r\n  height: number\r\n  /**\r\n   * This is the column number containing the grid cell\r\n   */\r\n  column: number\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst binarySearch = (a: number[], y: number): number => {\r\n  let l = 0\r\n  let h = a.length - 1\r\n\r\n  while (l <= h) {\r\n    const m = (l + h) >>> 1\r\n    const x = a[m]\r\n    if (x === y) return m\r\n    else if (x <= y) l = m + 1\r\n    else h = m - 1\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nconst getColumns = (\r\n  width = 0,\r\n  minimumWidth = 0,\r\n  gutter = 8,\r\n  columnCount?: number\r\n): [number, number] => {\r\n  columnCount = columnCount || Math.floor(width / (minimumWidth + gutter)) || 1\r\n  const columnWidth = Math.floor(\r\n    (width - gutter * (columnCount - 1)) / columnCount\r\n  )\r\n  return [columnWidth, columnCount]\r\n}\r\n\r\nconst emptyArr: [] = []\r\n","import * as React from 'react'\r\nimport useLatest from '@react-hook/latest'\r\nimport useEvent from '@react-hook/event'\r\nimport {useThrottleCallback} from '@react-hook/throttle'\r\nimport type {Positioner, PositionerItem} from './use-positioner'\r\n\r\n/**\r\n * A hook that creates a callback for scrolling to a specific index in\r\n * the \"items\" array.\r\n *\r\n * @param positioner A positioner created by the `usePositioner()` hook\r\n * @param options Configuration options\r\n */\r\nexport function useScrollToIndex(\r\n  positioner: Positioner,\r\n  options: UseScrollToIndexOptions\r\n) {\r\n  const {\r\n    align = 'top',\r\n    element = typeof window !== 'undefined' && window,\r\n    offset = 0,\r\n    height = typeof window !== 'undefined' ? window.innerHeight : 0,\r\n  } = options\r\n  const latestOptions = useLatest({\r\n    positioner,\r\n    element,\r\n    align,\r\n    offset,\r\n    height,\r\n  } as const)\r\n  const getTarget = React.useRef(() => {\r\n    const latestElement = latestOptions.current.element\r\n    return latestElement && 'current' in latestElement\r\n      ? latestElement.current\r\n      : latestElement\r\n  }).current\r\n  const [state, dispatch] = React.useReducer(\r\n    (\r\n      state: {\r\n        position: PositionerItem | undefined\r\n        index: number | undefined\r\n        prevTop: number | undefined\r\n      },\r\n      action:\r\n        | {type: 'scrollToIndex'; value: number | undefined}\r\n        | {type: 'setPosition'; value: PositionerItem | undefined}\r\n        | {type: 'setPrevTop'; value: number | undefined}\r\n        | {type: 'reset'}\r\n    ) => {\r\n      const nextState = {\r\n        position: state.position,\r\n        index: state.index,\r\n        prevTop: state.prevTop,\r\n      }\r\n\r\n      /* istanbul ignore next */\r\n      if (action.type === 'scrollToIndex') {\r\n        return {\r\n          position: latestOptions.current.positioner.get(action.value ?? -1),\r\n          index: action.value,\r\n          prevTop: void 0,\r\n        }\r\n      } else if (action.type === 'setPosition') {\r\n        nextState.position = action.value\r\n      } else if (action.type === 'setPrevTop') {\r\n        nextState.prevTop = action.value\r\n      } else if (action.type === 'reset') {\r\n        return defaultState\r\n      }\r\n\r\n      return nextState\r\n    },\r\n    defaultState\r\n  )\r\n  const throttledDispatch = useThrottleCallback(dispatch, 15)\r\n\r\n  // If we find the position along the way we can immediately take off\r\n  // to the correct spot.\r\n  useEvent(getTarget() as Window, 'scroll', () => {\r\n    if (!state.position && state.index) {\r\n      const position = latestOptions.current.positioner.get(state.index)\r\n\r\n      if (position) {\r\n        dispatch({type: 'setPosition', value: position})\r\n      }\r\n    }\r\n  })\r\n\r\n  // If the top changes out from under us in the case of dynamic cells, we\r\n  // want to keep following it.\r\n  const currentTop =\r\n    state.index !== void 0 &&\r\n    latestOptions.current.positioner.get(state.index)?.top\r\n\r\n  React.useEffect(() => {\r\n    const target = getTarget()\r\n    if (!target) return\r\n    const {height, align, offset, positioner} = latestOptions.current\r\n\r\n    if (state.position) {\r\n      let scrollTop = state.position.top\r\n\r\n      if (align === 'bottom') {\r\n        scrollTop = scrollTop - height + state.position.height\r\n      } else if (align === 'center') {\r\n        scrollTop -= (height - state.position.height) / 2\r\n      }\r\n\r\n      target.scrollTo(0, Math.max(0, (scrollTop += offset)))\r\n      // Resets state after 400ms, an arbitrary time I determined to be\r\n      // still visually pleasing if there is a slow network reply in dynamic\r\n      // cells\r\n      let didUnsubscribe = false\r\n      const timeout = setTimeout(\r\n        () => !didUnsubscribe && dispatch({type: 'reset'}),\r\n        400\r\n      )\r\n      return () => {\r\n        didUnsubscribe = true\r\n        clearTimeout(timeout)\r\n      }\r\n    } else if (state.index !== void 0) {\r\n      // Estimates the top based upon the average height of current cells\r\n      let estimatedTop =\r\n        (positioner.shortestColumn() / positioner.size()) * state.index\r\n      if (state.prevTop)\r\n        estimatedTop = Math.max(estimatedTop, state.prevTop + height)\r\n      target.scrollTo(0, estimatedTop)\r\n      throttledDispatch({type: 'setPrevTop', value: estimatedTop})\r\n    }\r\n  }, [currentTop, state, latestOptions, getTarget, throttledDispatch])\r\n\r\n  return React.useRef((index: number) => {\r\n    dispatch({type: 'scrollToIndex', value: index})\r\n  }).current\r\n}\r\n\r\nconst defaultState = {\r\n  index: void 0,\r\n  position: void 0,\r\n  prevTop: void 0,\r\n} as const\r\n\r\nexport type UseScrollToIndexOptions = {\r\n  /**\r\n   * The window element or a React ref for the window element. That is,\r\n   * this is the grid container.\r\n   * @default window\r\n   */\r\n  element?: Window | HTMLElement | React.RefObject<HTMLElement> | null\r\n  /**\r\n   * Sets the vertical alignment of the cell within the grid container.\r\n   * @default \"top\"\r\n   */\r\n  align?: 'center' | 'top' | 'bottom'\r\n  /**\r\n   * The height of the grid.\r\n   * @default window.innerHeight\r\n   */\r\n  height?: number\r\n  /**\r\n   * The vertical space in pixels between the top of the grid container and the top\r\n   * of the window.\r\n   * @default 0\r\n   */\r\n  offset?: number\r\n}\r\n","import * as React from 'react'\r\nimport {useWindowSize} from '@react-hook/window-size'\r\nimport {MasonryScroller} from './masonry-scroller'\r\nimport type {MasonryScrollerProps} from './masonry-scroller'\r\nimport {useContainerPosition} from './use-container-position'\r\nimport {useResizeObserver} from './use-resize-observer'\r\nimport {usePositioner} from './use-positioner'\r\nimport type {UsePositionerOptions} from './use-positioner'\r\nimport {useScrollToIndex} from './use-scroll-to-index'\r\nimport type {UseScrollToIndexOptions} from './use-scroll-to-index'\r\n\r\n/**\r\n * A \"batteries included\" masonry grid which includes all of the implementation details below. This component is the\r\n * easiest way to get off and running in your app, before switching to more advanced implementations, if necessary.\r\n * It will change its column count to fit its container's width and will decide how many rows to render based upon\r\n * the height of the browser `window`.\r\n */\r\nexport function Masonry<Item>(props: MasonryProps<Item>) {\r\n  const containerRef = React.useRef<null | HTMLElement>(null)\r\n  const windowSize = useWindowSize({\r\n    initialWidth: props.ssrWidth,\r\n    initialHeight: props.ssrHeight,\r\n  })\r\n  const containerPos = useContainerPosition(containerRef, windowSize)\r\n  const nextProps = Object.assign(\r\n    {\r\n      offset: containerPos.offset,\r\n      width: containerPos.width || windowSize[0],\r\n      height: windowSize[1],\r\n      containerRef,\r\n    },\r\n    props\r\n  ) as any\r\n  nextProps.positioner = usePositioner(nextProps)\r\n  nextProps.resizeObserver = useResizeObserver(nextProps.positioner)\r\n  const scrollToIndex = useScrollToIndex(nextProps.positioner, {\r\n    height: nextProps.height,\r\n    offset: containerPos.offset,\r\n    align:\r\n      typeof props.scrollToIndex === 'object'\r\n        ? props.scrollToIndex.align\r\n        : void 0,\r\n  })\r\n  const index =\r\n    props.scrollToIndex &&\r\n    (typeof props.scrollToIndex === 'number'\r\n      ? props.scrollToIndex\r\n      : props.scrollToIndex.index)\r\n\r\n  React.useEffect(() => {\r\n    if (index !== void 0) scrollToIndex(index)\r\n  }, [index, scrollToIndex])\r\n\r\n  return React.createElement(MasonryScroller, nextProps)\r\n}\r\n\r\nexport interface MasonryProps<Item>\r\n  extends Omit<\r\n      MasonryScrollerProps<Item>,\r\n      'offset' | 'width' | 'height' | 'containerRef' | 'positioner'\r\n    >,\r\n    Pick<UsePositionerOptions, 'columnWidth' | 'columnGutter' | 'columnCount'> {\r\n  /**\r\n   * Scrolls to a given index within the grid. The grid will re-scroll\r\n   * any time the index changes.\r\n   */\r\n  scrollToIndex?:\r\n    | number\r\n    | {\r\n        index: number\r\n        align: UseScrollToIndexOptions['align']\r\n      }\r\n  /**\r\n   * This is the width that will be used for the browser `window` when rendering this component in SSR.\r\n   * This prop isn't relevant for client-side only apps.\r\n   */\r\n  ssrWidth?: number\r\n  /**\r\n   * This is the height that will be used for the browser `window` when rendering this component in SSR.\r\n   * This prop isn't relevant for client-side only apps.\r\n   */\r\n  ssrHeight?: number\r\n  /**\r\n   * This determines how often (in frames per second) to update the scroll position of the\r\n   * browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\r\n   * The default value of `12` has been very reasonable in my own testing, but if you have particularly\r\n   * heavy `render` components it may be prudent to reduce this number.\r\n   * @default 12\r\n   */\r\n  scrollFps?: number\r\n}\r\n\r\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\r\n  Masonry.displayName = 'Masonry'\r\n}\r\n","import * as React from 'react'\r\nimport {Masonry} from './masonry'\r\nimport type {MasonryProps} from './masonry'\r\n\r\n/**\r\n * This is just a single-column `<Masonry>` component with `rowGutter` prop instead of\r\n * a `columnGutter` prop.\r\n */\r\nexport function List<Item>(props: ListProps<Item>) {\r\n  return (\r\n    <Masonry<Item>\r\n      role='list'\r\n      columnGutter={props.rowGutter}\r\n      columnCount={1}\r\n      columnWidth={1}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ListProps<Item>\r\n  extends Omit<\r\n    MasonryProps<Item>,\r\n    'columGutter' | 'columnCount' | 'columnWidth'\r\n  > {\r\n  /**\r\n   * The amount of vertical space in pixels to add between the list cells.\r\n   * @default 0\r\n   */\r\n  rowGutter?: number\r\n}\r\n\r\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\r\n  List.displayName = 'List'\r\n}\r\n","import * as React from 'react'\r\nimport useLatest from '@react-hook/latest'\r\n\r\n/**\r\n * A utility hook for seamlessly adding infinite scroll behavior to the `useMasonry()` hook. This\r\n * hook invokes a callback each time the last rendered index surpasses the total number of items\r\n * in your items array or the number defined in the `totalItems` option.\r\n *\r\n * @param loadMoreItems This callback is invoked when more rows must be loaded. It will be used to\r\n *  determine when to refresh the list with the newly-loaded data. This callback may be called multiple\r\n *  times in reaction to a single scroll event, so it's important to memoize its arguments. If you're\r\n *  creating this callback inside of a functional component, make sure you wrap it in `React.useCallback()`,\r\n *  as well.\r\n * @param options\r\n */\r\nexport function useInfiniteLoader<Item, T extends LoadMoreItemsCallback<Item>>(\r\n  loadMoreItems: T,\r\n  options: UseInfiniteLoaderOptions<Item> = emptyObj\r\n): LoadMoreItemsCallback<Item> {\r\n  const {\r\n    isItemLoaded,\r\n    minimumBatchSize = 16,\r\n    threshold = 16,\r\n    totalItems = 9e9,\r\n  } = options\r\n  const storedLoadMoreItems = useLatest(loadMoreItems)\r\n  const storedIsItemLoaded = useLatest(isItemLoaded)\r\n\r\n  return React.useCallback(\r\n    (startIndex, stopIndex, items) => {\r\n      const unloadedRanges = scanForUnloadedRanges(\r\n        storedIsItemLoaded.current,\r\n        minimumBatchSize,\r\n        items,\r\n        totalItems,\r\n        Math.max(0, startIndex - threshold),\r\n        Math.min(totalItems - 1, (stopIndex || 0) + threshold)\r\n      )\r\n      // The user is responsible for memoizing their loadMoreItems() function\r\n      // because we don't want to make assumptions about how they want to deal\r\n      // with `items`\r\n      for (let i = 0; i < unloadedRanges.length - 1; ++i)\r\n        storedLoadMoreItems.current(\r\n          unloadedRanges[i],\r\n          unloadedRanges[++i],\r\n          items\r\n        )\r\n    },\r\n    [\r\n      totalItems,\r\n      minimumBatchSize,\r\n      threshold,\r\n      storedLoadMoreItems,\r\n      storedIsItemLoaded,\r\n    ]\r\n  )\r\n}\r\n\r\n/**\r\n * Returns all of the ranges within a larger range that contain unloaded rows.\r\n */\r\nfunction scanForUnloadedRanges<Item>(\r\n  isItemLoaded: UseInfiniteLoaderOptions<\r\n    Item\r\n  >['isItemLoaded'] = defaultIsItemLoaded,\r\n  minimumBatchSize: UseInfiniteLoaderOptions<Item>['minimumBatchSize'] = 16,\r\n  items: any[],\r\n  totalItems: UseInfiniteLoaderOptions<Item>['totalItems'] = 9e9,\r\n  startIndex: number,\r\n  stopIndex: number\r\n): number[] {\r\n  const unloadedRanges: number[] = []\r\n  let rangeStartIndex: number | undefined,\r\n    rangeStopIndex: number | undefined,\r\n    index = startIndex\r\n\r\n  /* istanbul ignore next */\r\n  for (; index <= stopIndex; index++) {\r\n    if (!isItemLoaded(index, items)) {\r\n      rangeStopIndex = index\r\n      if (rangeStartIndex === void 0) rangeStartIndex = index\r\n    } else if (rangeStartIndex !== void 0 && rangeStopIndex !== void 0) {\r\n      unloadedRanges.push(rangeStartIndex, rangeStopIndex)\r\n      rangeStartIndex = rangeStopIndex = void 0\r\n    }\r\n  }\r\n\r\n  // If :rangeStopIndex is not null it means we haven't run out of unloaded rows.\r\n  // Scan forward to try filling our :minimumBatchSize.\r\n  if (rangeStartIndex !== void 0 && rangeStopIndex !== void 0) {\r\n    const potentialStopIndex = Math.min(\r\n      Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1),\r\n      totalItems - 1\r\n    )\r\n\r\n    /* istanbul ignore next */\r\n    for (index = rangeStopIndex + 1; index <= potentialStopIndex; index++) {\r\n      if (!isItemLoaded(index, items)) {\r\n        rangeStopIndex = index\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n\r\n    unloadedRanges.push(rangeStartIndex, rangeStopIndex)\r\n  }\r\n\r\n  // Check to see if our first range ended prematurely.\r\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\r\n  /* istanbul ignore next */\r\n  if (unloadedRanges.length) {\r\n    let firstUnloadedStart = unloadedRanges[0]\r\n    const firstUnloadedStop = unloadedRanges[1]\r\n\r\n    while (\r\n      firstUnloadedStop - firstUnloadedStart + 1 < minimumBatchSize &&\r\n      firstUnloadedStart > 0\r\n    ) {\r\n      const index = firstUnloadedStart - 1\r\n\r\n      if (!isItemLoaded(index, items)) {\r\n        unloadedRanges[0] = firstUnloadedStart = index\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  return unloadedRanges\r\n}\r\n\r\nconst defaultIsItemLoaded = <Item>(index: number, items: Item[]): boolean =>\r\n  items[index] !== void 0\r\n\r\nexport interface UseInfiniteLoaderOptions<Item> {\r\n  /**\r\n   *  A callback responsible for determining the loaded state of each item. Should return `true`\r\n   * if the item has already been loaded and `false` if not.\r\n   * @default (index: number, items: any[]) => boolean\r\n   */\r\n  isItemLoaded?: (index: number, items: Item[]) => boolean\r\n  /**\r\n   * The minimum number of new items to be loaded at a time.  This property can be used to\r\n   * batch requests and reduce HTTP requests.\r\n   * @default 16\r\n   */\r\n  minimumBatchSize?: number\r\n  /**\r\n   * The threshold at which to pre-fetch data. A threshold X means that new data should start\r\n   * loading when a user scrolls within X cells of the end of your `items` array.\r\n   * @default 16\r\n   */\r\n  threshold?: number\r\n  /**\r\n   * The total number of items you'll need to eventually load (if known). This can\r\n   * be arbitrarily high if not known.\r\n   * @default 9e9\r\n   */\r\n  totalItems?: number\r\n}\r\n\r\nexport type LoadMoreItemsCallback<Item> = (\r\n  startIndex: number,\r\n  stopIndex: number,\r\n  items: Item[]\r\n) => any\r\n\r\nconst emptyObj = {}\r\n"],"names":["useLatest","current","storedValue","React","useDebounceCallback","callback","wait","leading","storedCallback","timeout","deps","clearTimeout","args","arguments","setTimeout","apply","useDebounce","initialState","state","usePassiveLayoutEffect","document","createElement","useEvent","target","type","listener","cleanup","storedListener","storedCleanup","useLayoutEffect","targetEl","didUnsubscribe","addEventListener","removeEventListener","emptyObj","win","window","getSize","documentElement","clientWidth","clientHeight","useWindowSize","options","initialWidth","initialHeight","size","setDebouncedSize","setSize","perf","performance","Date","now","useThrottleCallback","fps","ms","prev","trailingTimeout","clearTrailing","rightNow","call","useThrottle","getScrollY","scrollY","pageYOffset","useWindowScroll","u","p","af","Caf","Raf","raf","bind","caf","h","lastTime","curr","next","Math","max","clearRequestTimeout","handle","v","requestTimeout","fn","start","loop","useScroller","offset","scrollTop","useScrollPosition","isScrolling","setIsScrolling","didMount","to","createCache","obj","e","cache","set","k","get","memo","constructors","depth","length","baseCache","base","map","i","node","one","g1","s1","value","g2","s2","g","s","memoize","mapConstructors","item","OneKeyMap","key","val","memoOne","areEqual","equal","defaultAreEqual","elementsCache","Map","useForceUpdate","setState","useMasonry","positioner","resizeObserver","items","as","ContainerComponent","id","className","style","role","tabIndex","containerRef","itemAs","ItemComponent","itemStyle","itemHeightEstimate","itemKey","defaultGetItemKey","overscanBy","height","RenderComponent","render","onRender","startIndex","stopIndex","forceUpdate","setItemRef","getRefSetter","itemCount","columnWidth","columnCount","range","estimateHeight","shortestColumn","measuredCount","shortestColumnSize","children","itemRole","storedOnRender","rangeEnd","needsFreshBatch","index","left","top","data","phaseTwoStyle","width","writingMode","position","process","throwWithoutData","push","createRenderElement","min","batchSize","ceil","phaseOneStyle","getCachedSize","didEverMount","containerStyle","getContainerStyle","assignUserStyle","Error","trieMemoize","WeakMap","memoizeOne","maxWidth","maxHeight","willChange","pointerEvents","cmp2","pargs","userStyle","_","zIndex","visibility","el","observe","offsetHeight","MasonryScroller","props","scrollFps","displayName","useContainerPosition","elementRef","emptyArr","containerPosition","setContainerPosition","offsetTop","offsetParent","offsetWidth","getIndex","arr","result","some","entry","class_1","__entries__","entries","splice","ctx","_i","_a","Object","defineProperty","prototype","enumerable","configurable","delete","has","clear","forEach","MapShim","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","observer","indexOf","connect_","observers","disconnect_","changesDetected","updateObservers_","gatherActive","hasActive","broadcastActive","activeObservers","filter","attributes","childList","characterData","subtree","disconnect","_b","propertyName","isReflowProperty","instance_","addObserver","removeObserver","getInstance","defineConfigurable","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","getHTMLElementContentRect","getComputedStyle","horizPad","right","vertPad","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","SVGGraphicsElement","SVGElement","isSVGGraphicsElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","_this","observation","unobserve","ResizeObserver","method","useResizeObserver","createResizeObserver","updater","updates","update","RED","BLACK","NIL","DELETE","KEEP","addInterval","treeNode","high","list","prevNode","removeInterval","NULL_NODE","low","C","P","undefined","R","L","updateMax","updateMaxUp","rotateLeft","tree","root","rotateRight","replaceNode","fixRemove","w","minimumTree","fixInsert","z","createIntervalTree","indexMap","insert","remove","intervalResult","originalYColor","search","stack","pop","usePositioner","columnGutter","initPositioner","getColumns","computedColumnWidth","computedColumnCount","createPositioner","setPositioner","cacheSize","nextPositioner","pos","intervalTree","columnHeights","Array","columnItems","column","columns","j","itemsInColumn","binarySearch","startItem","lo","hi","renderCallback","defaultItemHeight","tallestColumn","a","l","m","minimumWidth","gutter","floor","useScrollToIndex","align","element","innerHeight","latestOptions","getTarget","latestElement","action","nextState","prevTop","defaultState","dispatch","throttledDispatch","currentTop","scrollTo","estimatedTop","Masonry","windowSize","ssrWidth","ssrHeight","containerPos","nextProps","scrollToIndex","__reactCreateElement__","List","rowGutter","useInfiniteLoader","loadMoreItems","isItemLoaded","minimumBatchSize","threshold","totalItems","storedLoadMoreItems","storedIsItemLoaded","unloadedRanges","scanForUnloadedRanges","defaultIsItemLoaded","rangeStartIndex","rangeStopIndex","potentialStopIndex","firstUnloadedStart","firstUnloadedStop"],"mappings":"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"}